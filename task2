# Movie Rating Prediction using IMDb Dataset

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset 
df = pd.read_csv("C:\\Users\\admin\\Downloads\\archive (9)\\IMDb Movies India.csv", encoding='ISO-8859-1')

# Drop rows where Rating is missing (target column)
df = df.dropna(subset=["Rating"])

# Select important features
df = df[["Genre", "Director", "Actor 1", "Rating"]].copy()

# Drop rows with missing values in selected features
df = df.dropna()

# Encode categorical features
le_genre = LabelEncoder()
le_director = LabelEncoder()
le_actor = LabelEncoder()

df["Genre"] = le_genre.fit_transform(df["Genre"])
df["Director"] = le_director.fit_transform(df["Director"])
df["Actor 1"] = le_actor.fit_transform(df["Actor 1"])

# Define features and target
X = df[["Genre", "Director", "Actor 1"]]
y = df["Rating"]

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train the model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Predict and evaluate
y_pred = model.predict(X_test)

print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("R2 Score:", r2_score(y_test, y_pred))

# Predict example
sample = pd.DataFrame({
    "Genre": [le_genre.transform(["Drama"])[0]],
    "Director": [le_director.transform(["Amol Palekar"])[0]],
    "Actor 1": [le_actor.transform(["Rajat Kapoor"])[0]]
})
predicted_rating = model.predict(sample)[0]
print("\nðŸŽ¬ Predicted Rating for Drama by Amol Palekar with Rajat Kapoor:", round(predicted_rating, 2))
